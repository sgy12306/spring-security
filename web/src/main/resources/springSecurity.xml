<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security.xsd">


    <!--配置放行的资源-->
    <security:http pattern="/login.jsp" security="none"></security:http>
    <security:http pattern="/error.jsp" security="none"></security:http>
    <security:http pattern="/pages/**" security="none"></security:http>
    <security:http pattern="/img/**" security="none"></security:http>
    <security:http pattern="/plugins/**" security="none"></security:http>
    <security:http pattern="/css/**" security="none"></security:http>
    <!--  指定访问权限不使用表达式  auto-config="true是否使用springsecurity的默认11种过滤器-->
    <security:http auto-config="true" use-expressions="true">
        <!--配置拦截路径  表示secure路径下的所有URL请求都应当具有ROLE_USER或ROLE_ADMIN权限。当access的值是以“ROLE_”开头的则将会交由RoleVoter进行处理。
        access="ROLE_ADMIN,ROLE_USER"
        -->
        <security:intercept-url pattern="/**" access="hasAnyRole('ROLE_ADMIN','ROLE_USER','ROLE_PRODUCT','ROLE_ORDER')" requires-channel="http" method="POST"></security:intercept-url>
        <!--配置拦截表单,且使用自定义表单-->
        <security:form-login login-page="/login.jsp"
                             default-target-url="/index.jsp"
                             login-processing-url="/userlogin"
                             authentication-failure-handler-ref="failure"
                             authentication-success-handler-ref="successHandle"
        />
        <security:access-denied-handler error-page="/403.jsp"></security:access-denied-handler>
        <!--不同拦截禁止 攻击者换用不同的ip抓取用户的信息，伪装成真实用户对服务器进攻-->
        <security:csrf disabled="true"></security:csrf>
        <!--注销sessin跳转地址-->
        <security:logout logout-url="/logout" invalidate-session="true"
        logout-success-url="/error.jsp"></security:logout>
    </security:http>
    <!--配置节点认证信息-->
    <security:authentication-manager>
        <!--passwordEncoder告诉security加密方式，引用在service层-->
        <security:authentication-provider user-service-ref="userService">
            <security:password-encoder ref="passwordEncoder"></security:password-encoder>
        </security:authentication-provider>
    </security:authentication-manager>
    <!--配置密码-->
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
    <!--限制用户通过地址栏访问-->
    <security:global-method-security secured-annotations="enabled"></security:global-method-security>
         </beans>